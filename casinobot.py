from random import randint
from time import sleep
from telebot import TeleBot, types

# –ò–º–ø–æ—Ä—Ç —Ç–æ–∫–µ–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è (–Ω–µ–∏—Å–ø.)
# import os
# token = os.getenv("token")
from config import token
bot = TeleBot(token)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è
DATABASE = {}


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def startBot(message):
    if message.from_user.id not in DATABASE.keys():
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! –Ø - –±–æ—Ç, —Å–∏–º—É–ª—è—Ç–æ—Ä –∫–∞–∑–∏–Ω–æ! –ö–∞–∫ –∫ –í–∞–º –º–æ–∂–Ω–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è?')
        bot.register_next_step_handler(message, registerUser)
    else:
        bot.send_message(message.chat.id, '–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!')


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def registerUser(message):
    user_id = message.from_user.id
    username = message.text
    bot.send_message(message.chat.id, username + '? –•–æ—Ä–æ—à–æ, —è –∑–∞–ø–æ–º–Ω–∏–ª!')

    # –í–Ω–µ—Å–µ–Ω–∏–µ –≤ –ë–î –∏ –≤—ã–∑–æ–≤ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    DATABASE[user_id] = {'name': username, 'balance': 1000, 'bet': 0, 'score': 0, 'dice_won': 0, 'dice_lost': 0,
                         'slot_won': 0, 'slot_lost': 0, 'game_id': 0}
    sleep(0.5)
    bot.send_message(message.chat.id, str(username) + ', –í–∞—à —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: ' +
                     str(DATABASE[user_id]['balance']) + ' –æ—á–∫–æ–≤')
    sleep(0.5)
    mainMenu(message)


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
def mainMenu(message):
    keyboard = types.ReplyKeyboardMarkup(row_width=2)
    b_dice = types.KeyboardButton(text='üé≤ –°—ã–≥—Ä–∞—Ç—å –≤ "–ö–æ—Å—Ç–∏"')
    b_slot = types.KeyboardButton(text='üé∞ –°—ã–≥—Ä–∞—Ç—å –≤ –°–ª–æ—Ç-–º–∞—à–∏–Ω—É')
    b_stat = types.KeyboardButton(text='üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è')
    b_help = types.KeyboardButton(text='‚ùì –°–ø—Ä–∞–≤–∫–∞')
    b_reset = types.KeyboardButton(text='‚ùå –°–±—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö')
    keyboard.row(b_dice, b_slot)
    keyboard.row(b_stat)
    keyboard.row(b_help, b_reset)
    bot.send_message(message.chat.id, '–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?', reply_markup=keyboard)


# –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã –≤ "–ö–æ—Å—Ç–∏"
@bot.message_handler(func=lambda message: message.text == 'üé≤ –°—ã–≥—Ä–∞—Ç—å –≤ "–ö–æ—Å—Ç–∏"' and message.content_type == 'text')
def diceStart(message):
    DATABASE[message.from_user.id]['game_id'] = 1
    keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    b_start = types.KeyboardButton(text='–ù–∞—á–∞—Ç—å –∏–≥—Ä—É')
    b_back = types.KeyboardButton(text='üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    keyboard.row(b_start, b_back)
    bot.send_message(message.chat.id, text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É –∫–æ—Å—Ç–∏!', reply_markup=keyboard)


# –í—ã–±–æ—Ä —Å—Ç–∞–≤–∫–∏ –¥–ª—è –∏–≥—Ä—ã
@bot.message_handler(func=lambda message: message.text == '–ù–∞—á–∞—Ç—å –∏–≥—Ä—É' and message.content_type == 'text')
def askBet(message):
    bot.send_message(message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—é —Å—Ç–∞–≤–∫—É (–º–∞–∫—Å. —Å—Ç–∞–≤–∫–∞ - 50 –æ—á–∫–æ–≤)',
                     reply_markup=types.ReplyKeyboardRemove())
    bot.register_next_step_handler(message, setBet)


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–µ–¥—ë–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –∏ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å—Ç–∞–≤–∫–∏ –¥–ª—è –∏–≥—Ä—ã
def setBet(message):
    user_id = message.from_user.id
    bet = message.text
    if not str.isdigit(bet):
        bot.send_message(message.chat.id, text='–ù–µ–∫–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
        askBet(message)
    elif int(bet) < 1 or int(bet) > 50:
        bot.send_message(message.chat.id, text='–ù–µ–∫–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
        askBet(message)
    else:
        DATABASE[user_id]['bet'] = int(bet)
        if DATABASE[user_id]['game_id'] == 1:
            dicePlay(message)
        elif DATABASE[user_id]['game_id'] == 2:
            slotPlay(message)
        else:
            return


# "–•–æ–¥" (–±—Ä–æ—Å–æ–∫) –≤ "–ö–æ—Å—Ç–∏"
def dicePlay(message):
    die_faces = ['', '‚öÄ', '‚öÅ', '‚öÇ', '‚öÉ', '‚öÑ', '‚öÖ']
    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—Ä–æ—Å–∫–∞
    die1 = randint(1, 6)
    die2 = randint(1, 6)
    die3 = randint(1, 6)
    die4 = randint(1, 6)
    diesum1 = die1 + die2
    diesum2 = die3 + die4
    user_id = message.from_user.id
    bet = DATABASE[user_id]['bet']
    curr_score = 0

    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—Ä–æ—Å–∫–∞
    bot.send_message(message.chat.id, text='–ë—Ä–æ—Å–æ–∫... üé≤üé≤', reply_markup=types.ReplyKeyboardRemove())
    sleep(1)
    bot.send_message(message.chat.id, text= str(DATABASE[user_id]['name']) + ': ' + die_faces[die1] + die_faces[die2]
                                            + '\n' + '–ë–æ—Ç: ' + die_faces[die3] + die_faces[die4])
    sleep(0.5)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –∑–∞—á–∏—Å–ª—è–µ–º –∏–ª–∏ —Å–Ω–∏–º–∞–µ–º –æ—á–∫–∏
    if diesum1 > diesum2:
        DATABASE[user_id]['balance'] += bet
        DATABASE[user_id]['dice_won'] += bet
        curr_score += bet
        bot.send_message(message.chat.id, text='–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! üéâ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ' + str(bet) + ' –æ—á–∫–æ–≤!')
        sleep(0.5)
        bot.send_message(message.chat.id, text='üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: ' + str(DATABASE[user_id]['balance']) + ' –æ—á–∫–æ–≤.')
    elif diesum1 < diesum2:
        DATABASE[user_id]['balance'] -= bet
        DATABASE[user_id]['dice_lost'] += bet
        curr_score -= bet
        bot.send_message(message.chat.id, text='–ù–µ—É–¥–∞—á–∞. üòî –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ' + str(bet) + ' –æ—á–∫–æ–≤.')
        sleep(0.5)
        bot.send_message(message.chat.id, text='üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: ' + str(DATABASE[user_id]['balance']) + ' –æ—á–∫–æ–≤.')
    else:
        curr_score = 0
        bot.send_message(message.chat.id, text='–ù–∏—á—å—è.')
    DATABASE[user_id]['score'] += curr_score

    # –û–∂–∏–¥–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ö–æ–¥–∞
    keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    b_again = types.KeyboardButton(text='–°—ã–≥—Ä–∞—Ç—å –µ—â—ë —Ä–∞–∑')
    b_stop = types.KeyboardButton(text='–ó–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É')
    keyboard.row(b_again, b_stop)
    sleep(0.5)
    bot.send_message(message.chat.id, text='–°—ã–≥—Ä–∞–µ–º –µ—â—ë?', reply_markup=keyboard)


# –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –∏–≥—Ä—ã –≤ "–ö–æ—Å—Ç–∏"
@bot.message_handler(func=lambda message: message.text == '–°—ã–≥—Ä–∞—Ç—å –µ—â—ë —Ä–∞–∑' and message.content_type == 'text')
def playAgain(message):
    if DATABASE[message.from_user.id]['game_id'] == 1:
        dicePlay(message)
    elif DATABASE[message.from_user.id]['game_id'] == 2:
        slotPlay(message)


# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã, –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –≤—ã–≤–æ–¥ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
@bot.message_handler(func=lambda message: message.text == '–ó–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É' and message.content_type == 'text')
def gameOver(message):
    user_id = message.from_user.id
    score = DATABASE[user_id]['score']
    if score >= 0:
        bot.send_message(message.chat.id, text='–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ' + str(score) + ' –æ—á–∫–æ–≤')
    else:
        bot.send_message(message.chat.id, text='–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ' + str(abs(score)) + ' –æ—á–∫–æ–≤')
    DATABASE[user_id]['score'] = 0
    mainMenu(message)


# –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@bot.message_handler(func=lambda message: message.text == 'üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'
                                          and message.content_type == 'text')
def backToMenu(message):
    mainMenu(message)


# –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã –≤ —Å–ª–æ—Ç-–º–∞—à–∏–Ω—É
@bot.message_handler(func=lambda message: message.text == 'üé∞ –°—ã–≥—Ä–∞—Ç—å –≤ –°–ª–æ—Ç-–º–∞—à–∏–Ω—É' and message.content_type == 'text')
def slotStart(message):
    DATABASE[message.from_user.id]['game_id'] = 2
    keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    b_start = types.KeyboardButton(text='–ù–∞—á–∞—Ç—å –∏–≥—Ä—É')
    b_back = types.KeyboardButton(text='üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    b_table = types.KeyboardButton(text='üìã –¢–∞–±–ª–∏—Ü–∞ –≤—ã–∏–≥—Ä—ã—à–µ–π')
    keyboard.row(b_start, b_back)
    keyboard.row(b_table)
    bot.send_message(message.chat.id, text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –°–ª–æ—Ç-–º–∞—à–∏–Ω—É!', reply_markup=keyboard)


# –í—ã–≤–æ–¥ —Ç–∞–±–ª–∏—Ü—ã –≤—ã–∏–≥—Ä—ã—à–µ–π –≤ –°–ª–æ—Ç-–º–∞—à–∏–Ω–µ
@bot.message_handler(func=lambda message: message.text == 'üìã –¢–∞–±–ª–∏—Ü–∞ –≤—ã–∏–≥—Ä—ã—à–µ–π' and message.content_type == 'text')
def slotTable(message):
    txtfile = open('paytable.txt', 'r')
    reply = txtfile.read()
    bot.send_message(message.chat.id, text=reply)
    txtfile.close()


# "–•–æ–¥" (–Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ —Ä—ã—á–∞–≥) –≤ –°–ª–æ—Ç-–º–∞—à–∏–Ω–µ
def slotPlay(message):
    user_id = message.from_user.id
    bet = DATABASE[user_id]['bet']
    curr_score = bet

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–≥—Ä–æ–≤—É—é –ª–∏–Ω–∏—é –°–ª–æ—Ç-–º–∞—à–∏–Ω—ã
    slot_cells = ['üçí', 'üçã', 'üçâ', 'ü•ù', 'üîî', 'üí∏']
    cell1 = randint(0, 5)
    cell2 = randint(0, 5)
    cell3 = randint(0, 5)
    slot_line = slot_cells[cell1] + slot_cells[cell2] + slot_cells[cell3]

    # –°–≤–µ—Ä—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—É—é –ª–∏–Ω–∏—é —Å —Ç–∞–±–ª–∏—Ü–µ–π –∏ –≤—ã—á–∏—Å–ª—è–µ–º –≤—ã–∏–≥—Ä—ã—à
    if slot_line == 'üí∏üí∏üí∏':
        curr_score *= 50
        bot.send_message(message.chat.id, text='–î–∂–µ–∫–ø–æ—Ç!!!')
    elif slot_line == 'üîîüîîüîî':
        curr_score *= 20
    elif slot_line == 'ü•ùü•ùü•ù':
        curr_score *= 15
    elif slot_line == 'üçâüçâüçâ':
        curr_score *= 10
    elif slot_line == 'üçãüçãüçã':
        curr_score *= 5
    elif slot_line == 'üçíüçíüçí':
        curr_score *= 3
    elif 'üçíüçí' in slot_line:
        curr_score *= 2
    elif 'üçí' in slot_line:
        curr_score *= 1
    else:
        curr_score *= 0

    # –ó–∞—á–∏—Å–ª—è–µ–º –∏–ª–∏ —Å–Ω–∏–º–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –æ—á–∫–∏ —Å –≤—ã—á–µ—Ç–æ–º –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ–π —Å—Ç–∞–≤–∫–∏
    curr_score -= bet
    DATABASE[user_id]['balance'] += curr_score
    DATABASE[user_id]['score'] += curr_score

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –≤—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    bot.send_message(message.chat.id, text='–ó–∞–ø—É—Å–∫–∞—é –°–ª–æ—Ç-–º–∞—à–∏–Ω—É... üìç', reply_markup=types.ReplyKeyboardRemove())
    sleep(1)
    bot.send_message(message.chat.id, text=slot_line)
    sleep(0.5)
    if curr_score > 0:
        DATABASE[user_id]['slot_won'] += curr_score
        bot.send_message(message.chat.id, text='–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! üéâ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ' + str(curr_score) + ' –æ—á–∫–æ–≤!')
        sleep(0.5)
        bot.send_message(message.chat.id, text='üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: ' + str(DATABASE[user_id]['balance']) + ' –æ—á–∫–æ–≤.')
    elif curr_score < 0:
        DATABASE[user_id]['slot_lost'] += abs(curr_score)
        bot.send_message(message.chat.id, text='–°—Ç–∞–≤–∫–∞ –ø–æ—Ç–µ—Ä—è–Ω–∞. üòî –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ' + str(bet) + ' –æ—á–∫–æ–≤.')
        sleep(0.5)
        bot.send_message(message.chat.id, text='üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: ' + str(DATABASE[user_id]['balance']) + ' –æ—á–∫–æ–≤.')
    else:
        bot.send_message(message.chat.id, text='–°—Ç–∞–≤–∫–∞ –≤–µ—Ä–Ω—É–ª–∞—Å—å.')
        bot.send_message(message.chat.id, text='üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: ' + str(DATABASE[user_id]['balance']) + ' –æ—á–∫–æ–≤.')

    # –û–∂–∏–¥–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ö–æ–¥–∞
    keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    b_again = types.KeyboardButton(text='–°—ã–≥—Ä–∞—Ç—å –µ—â—ë —Ä–∞–∑')
    b_stop = types.KeyboardButton(text='–ó–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É')
    keyboard.row(b_again, b_stop)
    sleep(0.5)
    bot.send_message(message.chat.id, text='–°—ã–≥—Ä–∞–µ–º –µ—â—ë?', reply_markup=keyboard)


# –í—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è
@bot.message_handler(func=lambda message: message.text == 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è' and message.content_type == 'text')
def printStats(message):
    user_id = message.from_user.id
    bot.send_message(message.chat.id, text='üë§ –ò–º—è –∏–≥—Ä–æ–∫–∞: ' + str(DATABASE[user_id]['name']) + '\n' +
                     'üí∞ –ë–∞–ª–∞–Ω—Å: ' + str(DATABASE[user_id]['balance']) + ' –æ—á–∫–æ–≤' + '\n' +
                     'üé≤ –í—ã–∏–≥—Ä–∞–Ω–æ –≤ "–ö–æ—Å—Ç–∏": ' + str(DATABASE[user_id]['dice_won']) + ' –æ—á–∫–æ–≤' + '\n' +
                     'üé≤ –ü—Ä–æ–∏–≥—Ä–∞–Ω–æ –≤ "–ö–æ—Å—Ç–∏": ' + str(DATABASE[user_id]['dice_lost']) + ' –æ—á–∫–æ–≤' + '\n' +
                     'üé∞ –í—ã–∏–≥—Ä–∞–Ω–æ –≤ –°–ª–æ—Ç-–º–∞—à–∏–Ω–µ: ' + str(DATABASE[user_id]['slot_won']) + ' –æ—á–∫–æ–≤' + '\n' +
                     'üé∞ –ü—Ä–æ–∏–≥—Ä–∞–Ω–æ –≤ –°–ª–æ—Ç-–º–∞—à–∏–Ω–µ: ' + str(DATABASE[user_id]['slot_lost']) + ' –æ—á–∫–æ–≤')


# –í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ —Å–ø—Ä–∞–≤–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
@bot.message_handler(func=lambda message: message.text == '‚ùì –°–ø—Ä–∞–≤–∫–∞' and message.content_type == 'text')
def helpMenu(message):
    keyboard = types.ReplyKeyboardMarkup(row_width=2)
    b_about = types.KeyboardButton(text='üìÑ –û –ø—Ä–æ–≥—Ä–∞–º–º–µ')
    b_law = types.KeyboardButton(text='üìï –ó–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ –†–§ –æ–± –∞–∑–∞—Ä—Ç–Ω—ã—Ö –∏–≥—Ä–∞—Ö')
    b_back = types.KeyboardButton(text='üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    keyboard.row(b_about, b_law)
    keyboard.row(b_back)
    bot.send_message(message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª', reply_markup=keyboard)


# –ü–µ—á–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞ "–û –ø—Ä–æ–≥—Ä–∞–º–º–µ"
@bot.message_handler(func=lambda message: message.text == 'üìÑ –û –ø—Ä–æ–≥—Ä–∞–º–º–µ' and message.content_type == 'text')
def printAbout(message):
    txtfile = open('about.txt', 'r')
    reply = txtfile.read()
    bot.send_message(message.chat.id, text=reply)
    txtfile.close()


# –ü–µ—á–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞ "–ó–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ –†–§ –æ–± –∞–∑–∞—Ä—Ç–Ω—ã—Ö –∏–≥—Ä–∞—Ö"
@bot.message_handler(func=lambda message: message.text == 'üìï –ó–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ –†–§ –æ–± –∞–∑–∞—Ä—Ç–Ω—ã—Ö –∏–≥—Ä–∞—Ö'
                                          and message.content_type == 'text')
def printLaw(message):
    txtfile = open('law.txt', 'r')
    reply = txtfile.read()
    bot.send_message(message.chat.id, text=reply)
    txtfile.close()


# –ó–∞–ø—Ä–æ—Å —É–¥–∞–ª–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(func=lambda message: message.text == '‚ùå –°–±—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö' and message.content_type == 'text')
def resetBot(message):
    keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    b_yes = types.KeyboardButton(text='–î–∞, —É–¥–∞–ª–∏—Ç—å –º–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    b_no = types.KeyboardButton(text='–ù–µ—Ç, —è –ø–µ—Ä–µ–¥—É–º–∞–ª')
    keyboard.row(b_yes, b_no)
    bot.send_message(message.chat.id, text='‚ö† –í–Ω–∏–º–∞–Ω–∏–µ! –î–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ —É–¥–∞–ª–∏—Ç –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –∏ –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ '
                                           '—Å –Ω–∏–º –¥–∞–Ω–Ω—ã–µ! –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?', reply_markup=keyboard)


# –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(func=lambda message: message.text == '–î–∞, —É–¥–∞–ª–∏—Ç—å –º–æ–π –ø—Ä–æ—Ñ–∏–ª—å' and message.content_type == 'text')
def resetConfirm(message):
    bot.send_message(message.chat.id, text='–ü—Ä–∏–Ω—è—Ç–æ, —É–¥–∞–ª—è—é –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã...',
                     reply_markup=types.ReplyKeyboardRemove())
    DATABASE.pop(message.from_user.id)


# –û—Ç–º–µ–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è
@bot.message_handler(func=lambda message: message.text == '–ù–µ—Ç, —è –ø–µ—Ä–µ–¥—É–º–∞–ª' and message.content_type == 'text')
def resetDeny(message):
    mainMenu(message)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ—á–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['text'])
def textHandler(message):
   user_id = message.from_user.id
   if user_id not in DATABASE.keys():
       return bot.send_message(message.chat.id,
                               text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /start')
   text = message.text.lower()

   if '–ø—Ä–∏–≤–µ—Ç' in text:
       bot.send_message(message.chat.id, text='–ü—Ä–∏–≤–µ—Ç! :)')
   elif '–ø–æ–∫–∞' in text:
       bot.send_message(message.chat.id, text='–î–æ –≤—Å—Ç—Ä–µ—á–∏!')
   else:
       bot.send_message(message.chat.id,
                        text='–ü—Ä–æ—Å—Ç–∏—Ç–µ, —è –í–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –∏–∑ –º–µ–Ω—é.')
       mainMenu(message)


# –ó–∞–ø—É—Å–∫ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
if __name__ == '__main__':
    bot.polling(none_stop=True)
